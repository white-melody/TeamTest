package egovframework.example.emp.service.impl;


import java.util.List;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit.jupiter.SpringExtension;

import egovframework.example.common.Criteria;
import egovframework.example.dept.service.DeptVO;
import egovframework.example.emp.service.EmpService;
import egovframework.example.emp.service.EmpVO;
import lombok.extern.log4j.Log4j2;

@ExtendWith(SpringExtension.class)
@ContextConfiguration(locations = {
        "classpath:/egovframework/spring/context-aspect.xml",
	    "classpath:/egovframework/spring/context-common.xml",
	    "classpath:/egovframework/spring/context-datasource.xml",
	    "classpath:/egovframework/spring/context-idgen.xml",
	    "classpath:/egovframework/spring/context-mapper.xml",
	    "classpath:/egovframework/spring/context-sqlMap.xml",
	    "classpath:/egovframework/spring/context-transaction.xml"
	})
@Log4j2
class EmpServiceImplTest {
	@Autowired
	EmpService empService;

	@Test
	void testSelectEmpList() {
//		여기서 각 메소드별 테스트하면 됩니다.: 전체조회
//		1) 테스트 조건
		Criteria criteria=new Criteria();
		criteria.setSearchKeyword("");
		criteria.setFirstIndex(0);
		criteria.setPageUnit(3);

//		2) 실제 메소드실행
		List<?> list=empService.selectEmpList(criteria);
//		3) 검증(확인): 로그 , DB 확인, assert~
		log.info(list);
	
	}
	   @Test
	   void testSelectEmpListTotCnt() {
//	      여기서 각 메소드별 테스트하면 됩니다.: 전체조회
//	      1) 테스트 조건
	      Criteria criteria=new Criteria();
	      criteria.setSearchKeyword("");    // 검색어
	      
//	      2) 실제 메소드실행
	      int count=empService.selectEmpListTotCnt(criteria);
//	      3) 검증(확인): 로그 , DB 확인, assert~
	      log.info(count);
	   }
	   
	   @Test
	   void testInsert() {
//	      여기서 각 메소드별 테스트하면 됩니다.: 전체조회
//	      1) 테스트 조건
	      EmpVO empVO = new EmpVO(0,"ASD","CLERK",7654,"1982-03-10 00:00:00",900,400,20);
//	      empVO.setJob("); 생성자 or set 둘중하나 선택가능
//	      2) 실제 메소드실행
	      empService.insert(empVO);
//	      3) 검증(확인): 로그 , DB 확인, assert~
	      
	   }
	   
	   @Test
	   void testSelectEmp() {
//	      여기서 각 메소드별 테스트하면 됩니다.: 전체조회
//	      1) 테스트 조건
	      int eno=10;
//	      2) 실제 메소드실행
	      EmpVO empVO = empService.selectEmp(eno);
//	      3) 검증(확인): 로그 , DB 확인, assert~
	      log.info(empVO);
	   }
	   @Test
	   void testUpdate() {
//	      여기서 각 메소드별 테스트하면 됩니다.: 전체조회
//	      1) 테스트 조건
	      EmpVO empVO = new EmpVO(8000,"AS","LERK",7545,"1980-03-10 00:00:00",1900,4000,30);
//	      empVO.setJob("); 생성자 or set 둘중하나 선택가능
//	      2) 실제 메소드실행
	      empService.insert(empVO);
//	      3) 검증(확인): 로그 , DB 확인, assert~
	      
	   }
	   
	   @Test
	   void testDelete() {
//	      여기서 각 메소드별 테스트하면 됩니다.: 전체조회
//	      1) 테스트 조건
	      EmpVO empVO = new EmpVO();   
//	      2) 실제 메소드실행
	      empService.delete(empVO);
//	      3) 검증(확인): 로그 , DB 확인, assert~
	      
	   }
}
